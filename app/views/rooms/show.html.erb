<section class="section" id="room-header">
  <div id="breadcrumb">
    <%= "Home/#{@room.name}"%>
  </div>
  <div id="share-this-room">
    Share this Room: <%= link_to room_url(@room) %>
  <div>
</section>

<section class="section" id="main">
  <% if @current_jam %>
    <div id="stage">
      <%= react_component("waveform_player", { id: @current_jam.id, audioUrl: url_for(@current_jam.file) }) %>
      <div class="jam-attributes jam-attributes-big">
        <ul>
          <li>
            <span class="jam-attribute jam-attribute-date">
              <span class="jam-key">Latest JAM: </span>
              <span class="jam-value"><%= @current_jam.created_at.to_formatted_s(:long) %></span>
            </span>
          </li>
          <li>
            <span class="jam-attribute jam-attribute-filename">
              <span class="jam-key">FILE: </span>
              <span class="jam-value"><%= @current_jam.file.filename %></span>
            </span>
          </li>
          <li>
            <span class="jam-attribute jam-attribute-bpm">
              <span class="jam-key"><i class="fas fa-file-audio"></i> Jam Type: </span>
              <span class="jam-value"><%= @current_jam.jam_type %></span>
            </span>
          </li>
          <li>
            <span class="jam-attribute jam-attribute-length">
              <span class="jam-key"><i class="far fa-clock"></i> Length: </span>
              <span class="jam-value"><%= format_duration(@current_jam.duration) %></span>
            </span>
          </li>
          <li>
            <span class="jam-attribute jam-attribute-bpm">
              <span class="jam-key"><i class="fas fa-drum"></i> BPM: </span>
              <span class="jam-value"><%= @current_jam.bpm %></span>
            </span>
          </li>
          <li>
            <span class="jam-attribute jam-attribute-bpm">
              <span class="jam-key"><i class="fas fa-music"></i> Song Key: </span>
              <span class="jam-value"><%= @current_jam.song_key_list %></span>
            </span>
          </li>
          <li>
            <span class="jam-attribute jam-attribute-bpm">
              <span class="jam-key"><i class="fas fa-users"></i> Could Use: </span>
              <span class="jam-value"><%= @current_jam.could_use_list %></span>
            </span>
          </li>
          <li>
            <span class="jam-attribute jam-attribute-bpm">
              <span class="jam-key"><i class="fas fa-compact-disc"></i></i> Styles: </span>
              <span class="jam-value"><%= @current_jam.style_list %></span>
            </span>
          </li>
          <li>
            <span class="jam-attribute jam-attribute-user">
              <span class="jam-key"><i class="far fa-user"></i> User: </span>
              <span class="jam-value"><%= jam_user(@current_jam) %></span>
            </span>
          </li>
        </ul>
      </div>
    </div>
    <div class="jam-buttons">
      <h1>JAM on this track!</h1>
      <%= link_to "Download Track", url_for(@current_jam.file), class: "button is-dark" %>
      <button id="upload-jam-button" class="button">Upload New Track</button>
    </div>
  <% else %>
    <div>
      <div>
        <p>This room is brand new! Upload a track to get started!</p>
      </div>
      <br />
      <button id="upload-jam-button" class="button">Upload New Track</button>
    </div>
  <% end %>
</section>


<section class="section" id="supporting-jams">
  <div id="previous-jams">
    <% unless @supporting_jams.empty? %>
      <div class="columns jam-header">
        <div class="column">
          Supporting Jams
        </div>
        <div class="column">
          Date
        </div>
        <div class="column">
          Filename
        </div>
        <div class="column">
          <i class="fas fa-file-audio"></i>
        </div>
        <div class="column">
          <i class="far fa-clock"></i>
          Length
        </div>
        <div class="column">
          <i class="fas fa-drum"></i>
          BPM
        </div>
        <div class="column">
          <i class="far fa-user"></i>
          User
        </div>
        <div class="column">
        </div>
      </div>

      <div class="jam-rows">
        <% @supporting_jams.each do |jam| %>
          <div class="columns jam-row">
            <div class="column">
              <span class="jam-value"><%= react_component("waveform_player", { id: jam.id, audioUrl: url_for(jam.file) }) %></span>
            </div>
            <div class="column">
              <span class="jam-value"><%= jam.created_at.to_formatted_s(:long) %></span>
            </div>
            <div class="column">
              <span class="jam-value"><%= jam.file.filename %></span>
            </div>
            <div class="column">
              <span class="jam-value"><%= jam.jam_type %></span>
            </div>
            <div class="column">
              <span class="jam-value"><%= format_duration(jam.duration) %></span>
            </div>
            <div class="column">
              <span class="jam-value"><%= jam.bpm %></span>
            </div>
            <div class="column">
              <span class="jam-value"><%= jam_user(jam) %></span>
            </div>
            <div class="column">
              <span class="jam-value"><%= link_to "Download Track", url_for(jam.file), class: "button is-dark" %></span>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>
</section>

<%= render 'upload_track_modal' %>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const uploadTrackModal = document.querySelector('#upload-track-modal');

    const uploadJamButton = document.querySelector('button#upload-jam-button');
    uploadJamButton.onclick = (event) => {
      event.preventDefault();
      
      uploadTrackModal.classList.add('is-active');
    
      const closeFunction = (e) => {
        e.preventDefault();
        uploadTrackModal.classList.remove('is-active');
      };

      uploadTrackModal.querySelector('.modal-background').addEventListener('click', closeFunction);
    
      uploadTrackModal.querySelectorAll("button.modal-close-button").forEach(element => {
        element.addEventListener('click', closeFunction);
      });
    }
    
    // Handle audio file upload
    const fileInput = document.querySelector('#file-upload-field input[type=file]');

    fileInput.addEventListener('change', () => {
      if (fileInput.files.length > 0) {
        const fileName = document.querySelector('#file-upload-field .file-name');
        const file = fileInput.files[0]
        fileName.textContent = file.name;

        const durationInput = document.querySelector('#jam_duration_list');
        const audioContext = new (window.AudioContext || window.webkitAudioContext)();
    
        file.arrayBuffer().then(fileBuffer => {
          audioContext.decodeAudioData(fileBuffer).then(decodeAudioData => {
            const duration = decodeAudioData.duration;
            durationInput.value = parseInt(duration);
          })
        });

        // Send focus to bpm input
        uploadTrackModal.querySelector('#jam_bpm_list').focus();
      }
    });
  });
</script>
